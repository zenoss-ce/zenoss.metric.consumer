<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>metric-consumer-parent</artifactId>
		<groupId>org.zenoss</groupId>
		<version>0.1.3-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.zenoss</groupId>
	<artifactId>metric-consumer-app</artifactId>
	<properties>
		<ssl.cert.dir>target/cert</ssl.cert.dir>
		<assembly.skipAssembly>true</assembly.skipAssembly>
		<databus.version>0.1.1</databus.version>
		<jersey.version>1.19.3</jersey.version>
		<jackson.version>2.7.4</jackson.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.google.http-client</groupId>
			<artifactId>google-http-client</artifactId>
			<version>1.17.0-rc</version>
			<exclusions>
				<exclusion>  <!-- declare the exclusion here -->
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.zenoss</groupId>
			<artifactId>metric-data</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.zenoss</groupId>
			<artifactId>metric-zapp-reporter</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>log4j-over-slf4j</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.zenoss.zapp</groupId>
			<artifactId>zenoss-app</artifactId>

		</dependency>
		<dependency>
			<groupId>org.zenoss.zapp</groupId>
			<artifactId>zauth-bundle</artifactId>
			<version>${version.zapp}</version>
		</dependency>
		<dependency>
			<groupId>org.zenoss</groupId>
			<artifactId>metric-tsdb</artifactId>
			<version>${version.metric.tsdb}</version>
		</dependency>
		<dependency>
			<groupId>org.zenoss.databus</groupId>
			<artifactId>databus-producer</artifactId>
			<version>${databus.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>4.2.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>4.2.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
			<!-- <scope>runtime</scope> -->
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>${jersey.version}</version>
			<!-- <scope>runtime</scope> -->
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>${jersey.version}</version>
			<!-- <scope>runtime</scope> -->
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
	<groupId>com.fasterxml.jackson.jaxrs</groupId>
	<artifactId>jackson-jaxrs-json-provider</artifactId>
	<version>${jackson.version}</version>
</dependency>
		<dependency>
	<groupId>com.google.guava</groupId>
	<artifactId>guava</artifactId>
	<version>19.0</version>
</dependency>
		
		<!--test scope -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
		</dependency>
		<dependency>
			<groupId>com.yammer.dropwizard</groupId>
			<artifactId>dropwizard-testing</artifactId>
		</dependency>
		<!--runtime -->

	</dependencies>
	<build>
		<resources>
			<resource>
				<targetPath>${project.build.directory}/etc</targetPath>
				<filtering>true</filtering>
				<directory>${basedir}/src/main/etc</directory>
			</resource>
			<resource>
				<targetPath>${project.build.directory}/bin</targetPath>
				<filtering>true</filtering>
				<directory>${basedir}/src/main/bin</directory>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<mainClass>org.zenoss.app.consumer.ConsumerApp</mainClass>
					<arguments>
						<argument>server</argument>
						<argument>${project.build.directory}/etc/configuration.yaml</argument>
					</arguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<createDependencyReducedPom>false</createDependencyReducedPom>
					<filters>
						<filter>
							<artifact>*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.RSA</exclude>
								<exclude>META-INF/*.INF</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>org.zenoss.app.consumer.ConsumerApp</mainClass>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.handlers</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.schemas</resource>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>keytool-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<id>clean</id>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
					<execution>
						<phase>generate-resources</phase>
						<id>genkey</id>
						<goals>
							<goal>genkey</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<keystore>${project.build.directory}/cert/ssl.pfx</keystore>
					<dname>cn=localhost</dname>
					<keypass>zapp_pass</keypass>
					<storepass>zapp_pass</storepass>
					<alias>zapp</alias>
					<keyalg>RSA</keyalg>
					<storetype>pkcs12</storetype>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/zapp.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<!-- this is used for inheritance merges -->
						<phase>package</phase>
						<!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.3</version>
				<executions>
					<execution>
						<id>check-for-bugs</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>assemble</id>
			<properties>
				<ssl.cert.dir>etc/${project.artifactId}/cert</ssl.cert.dir>
				<assembly.skipAssembly>false</assembly.skipAssembly>
			</properties>
		</profile>
	</profiles>
      </project>
      
